%Реализовать алгоритм распознавания ГСВ методом имитационного моделирования на основе оценки плотности вероятности методом Парзена (функция vkernel(x,XN,h_N,kl_kernel): ядро -- гауссовская функция c использованием диагональной матрицы, r=0.5, h_N считать на основе обучающей выборки) при следующих исходных данных.
% pw1=0.3; pw2=0.7;
% N1=6000; N2=14000;
% (объем тестовых данных каждого класса)
% (объем обучающих данных должен составлять 1/10
% от этих чисел для каждого класса соответственно)
% m1=[1.5, 2.0, 1.0]'; 
% m2=[1.0,3.0,1.0]';
% C1=[1.5, 0.1, 0.0;0.1, 2.0, 0.2;0.0, 0.2, 2.0;];
% C2=[2.0, -0.2, 0.0;-0.2, 2.0, 0.2;0.0, 0.2, 2.0;];
% При генерации выборок классов использовать начальную установку генератора СВ rng(15) (в начале кода один раз) и функцию randncor(n,N,C).
% Сначала генерировать обучающие данные для одного класса, потом -- второго.
% Затем -- тестовые данные для одного класса и второго.
% Подсчитать суммарную ошибку распознавания (отношение количества ошибок перепутывания обоих классов к общему числу экспериментов N1+N2) до четвертого знака после запятой.
%
clear all; close all;
rng(1); % В условии должно быть
KK = 20000; % это N1+N2
%1.Задание исходных данных
n=3;M=2;%%размерность признакового пространства и число классов (Из условия)

% МЕНЯЕТСЯ СЛЕДУЮЩАЯ СТРОЧКА:
C=zeros(n,n,M); C_=C;%матрица ковариации вектора признаков различных классов
pw=[0.3 0.7]; % Тоже в условии
pw=pw/sum(pw);
m=[1.5, 2.0, 1.0; 1.0, 3.0, 1.0]';
C(:,:,1)=[1.5, 0.1, 0.0;0.1, 2.0, 0.2;0.0, 0.2, 2.0;];
C(:,:,2)=[2.0, -0.2, 0.0;-0.2, 2.0, 0.2;0.0, 0.2, 2.0;];
for k=1:M,
    C_(:,:,k)=C(:,:,k)^-1; 
end;

Ks = [600 1400]; % Обучающая выборка для 1 и 2 классов
for i=1:M,%цикл по классам   
    XN{i} = repmat(m(:,i), [1, Ks(i)]) + randncor(n,Ks(i),C(:,:,i)); %генерация К образов i-го класса 
end;	

r=0.5; kl_kernel=11;	% параметры оценки Парзена (Должно быть в условии)
 
%3.Тестирование алгоритма методом статистических испытаний
Pcv=zeros(M); p=zeros(M,1);

x=ones(n,1);
i=1;
for k=1:6000,%цикл по числу испытаний (По N1)
        [x,px]=randncor(n,1,C(:,:,i)); x=x+m(:,i);%генерация образа i-го класса             
        for j=1:M,%вычисление значения разделяющих функций               
            h_N=Ks(j)^(-r/n);       % + %размеры окна Парзена
            p(j)=vkernel(x, XN{j}, h_N, 11);    % +
        end;
        
        [ui,iai]=max(p);        % + %определение максимума
        Pcv(i,iai)=Pcv(i,iai)+1;% + %фиксация результата распознавания
end;
i=2;
for k=1:14000,%цикл по числу испытаний (N2)
        [x,px]=randncor(n,1,C(:,:,i)); x=x+m(:,i);%генерация образа i-го класса             
        for j=1:M,%вычисление значения разделяющих функций               
            h_N=Ks(j)^(-r/n);       % + %размеры окна Парзена
            p(j)=vkernel(x, XN{j}, h_N, 11);    % +
        end;
        
        [ui,iai]=max(p);        % + %определение максимума
        Pcv(i,iai)=Pcv(i,iai)+1;% + %фиксация результата распознавания
end;
(Pcv(1,2)+Pcv(2,1))/20000







