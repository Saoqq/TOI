%Реализовать алгоритм распознавания ГСВ методом имитационного моделирования при следующих исходных данных.
%
%n=2; M=2;
%
%pw1=0.4; pw2=0.6;
%
%N1=8000; N2=12000;
%
%% (объем сгенерированных данных каждого класса)
%
% m1=[2.0, 1.5]'; 
%
% m2=[-1.0,1.0]';
%
% C=[2.0, 0.2;
%
%        0.2, 2.0;];
%
%При генерации выборок классов использовать начальную установку генератора СВ rng(4) (в начале кода один раз) и функцию randncor(n,N,C).
%
%Сначала генерировать данные для одного класса, потом -- второго.
%
%Подсчитать суммарную ошибку распознавания (отношение количества ошибок перепутывания обоих классов к общему числу экспериментов N1+N2) до четвертого знака после запятой.
%Файл pr52_rec_gaus_eq. Синтез и анализ алгоритмов распознавания ГСВ с одинаковой 
%матрицей ковариации  (двумерный вектор признаков)
clear all; close all;
rng(4);
%1.Задание исходных данных
n=2; M=2; %%размерность признакового пространства  и число классов

m = [2 1.5; -1 1]';   % координаты центров классов (2,-3) и (1,6)
% априорные вероятности классов (доля образов каждого класса в общей выборке)
pw = [0.4, 0.6];    
np=sum(pw); pw=pw/np;

C = [2 0.2; 0.2 2 ];   % матрица ковариаций классов
C_ = C^-1;
D = C(1,1);

%2.Расчет разделяющих функций и матрицы вероятностей ошибок распознавания
G=zeros(M,n+1); PIJ=zeros(M); l0_=zeros(M);
for i = 1 : M,
    G(i,1:n)=(C_*m(:,i))';     G(i,n+1)=-0.5*m(:,i)'*C_*m(:,i);
    for j=i+1:M,
        l0_(i,j)=log(pw(j)/pw(i)); 
        h=0.5*(m(:,i)-m(:,j))'*C_*(m(:,i)-m(:,j)); sD=sqrt(2*h);
        PIJ(i,j)=normcdf(l0_(i,j),h,sD); PIJ(j,i)=1-normcdf(l0_(i,j),-h,sD);
    end;
    PIJ(i,i)=1-sum(PIJ(i,:));%нижняя граница вероятности правильного распознавания
end;


%3.Тестирование алгоритма методом статистических испытаний
x=ones(n+1,1); Pc_=zeros(M);%экспериментальная матрица вероятностей ошибок
for k=1:8000,%цикл по числу испытаний
        [x_,px]=randncor(n,1,C);        
        x(1:n,1)=m(:,1)+x_;%генерация образа i-го класса
        u=G*x+log(pw');%вычисление значения разделяющих функций
        [ui,iai]=max(u);%определение максимума
        Pc_(1,iai)=Pc_(1,iai)+1;%фиксация результата распознавания
end;

for k=1:12000,%цикл по числу испытаний
        [x_,px]=randncor(n,1,C);        
        x(1:n,1)=m(:,2)+x_;%генерация образа i-го класса
        u=G*x+log(pw');%вычисление значения разделяющих функций
        [ui,iai]=max(u);%определение максимума
        Pc_(2,iai)=Pc_(2,iai)+1;%фиксация результата распознавания
end;

Pc_=[Pc_(1,:) ;Pc_(2,:)];
disp('Теоретическая матрица вероятностей ошибок');disp(PIJ); 
disp('Экспериментальная матрица вероятностей ошибок');disp(Pc_);


disp((Pc_(1,2)+Pc_(2,1))/20000)
